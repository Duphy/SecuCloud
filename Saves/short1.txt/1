,66,67,68,69,70
5000
363 - ParentT ::
stmt s; while w;
Select w such that Parent*(_,w)
9,41,68
5000
364 - ParentT ::
stmt s; while w;
Select BOOLEAN such that Parent*(_,w)
True
5000
365 - ParentT ::
stmt s; if if;
Select if such that Parent*(_,if)
59,43
5000
366 - ParentT ::
stmt s; call call;
Select call such that Parent*(_,call)
5,11,12,13,23,28,36,42,47,48,65,69
5000
367 - ParentT ::
assign a;prog_line n;
Select BOOLEAN such that Parent*(a,6)
False
5000
368 - ParentT ::
assign a;prog_line n;
Select BOOLEAN such that Parent*(a,7)
False
5000
369 - ParentT ::
variable v;assign a;
Select BOOLEAN such that Parent*(a,_)
False
5000
370 - ParentT ::
assign a;prog_line n;
Select a such that Parent*(a,_)

5000
371 - ParentT ::
assign a;
Select a such that Parent*(a,a)

5000
372 - ParentT ::
stmt s;assign a;
Select s such that Parent*(a,s)

5000
373 - ParentT ::
assign a; while w;
Select w such that Parent*(a,w)

5000
374 - ParentT ::
assign a; while w;
Select BOOLEAN such that Parent*(a,w)
False
5000
375 - ParentT ::
assign a; if if;
Select if such that Parent*(a ,if)

5000
376 - ParentT ::
assign a; call call;
Select call such that Parent*(a,call)

5000
377 - ParentT ::
stmt s;prog_line n;
Select BOOLEAN such that Parent*(s,6)
True
5000
378 - ParentT ::
stmt s;prog_line n;
Select BOOLEAN such that Parent*(s,7)
False
5000
379 - ParentT ::
stmt s;prog_line n;
Select BOOLEAN such that Parent*(s,_)
True
5000
380 - ParentT ::
stmt s;prog_line n;
Select s such that Parent*(s,_)
3,7,9,20,26,34,38,41,43,58,59,64,68
5000
381 - ParentT ::
stmt s;assign a;
Select a such that Parent*(s,a) with a.stmt#=15

5000
382 - ParentT ::
stmt s,s1;
Select s such that Parent*(s1,s)
4,5,6,8,9,10,11,12,13,14,21,22,23,27,28,29,35,36,37,39,40,41,42,43,44,45,46,47,48,59,60,61,65,66,67,68,69,70
5000
383 - ParentT ::
stmt s; while w;
Select w such that Parent*(s,w)
9,41,68
5000
384 - ParentT ::
stmt s; while w;
Select BOOLEAN such that Parent*(s,w)
True
5000
385 - ParentT ::
stmt s; if if;
Select if such that Parent*(s,if)
43,59
5000
386 - ParentT ::
stmt s; call call;
Select call such that Parent*(s,call)
5,11,12,13,23,28,36,42,47,48,65,69
5000
387 - ParentT ::
while w;prog_line n;
Select BOOLEAN such that Parent*(w,7)
False
5000
388 - ParentT ::
while w;prog_line n;
Select w such that Parent*(w,7)

5000
389 - ParentT ::
while w;variable v;prog_line n;
Select BOOLEAN such that Parent*(w,_)
True
5000
390 - ParentT ::
while w;prog_line n;
Select w such that Parent*(w,_)
3,9,26,34,41,58,68
5000
391 - ParentT ::
assign a;while w;
Select a such that Parent*(w,a) with a.stmt#=62

5000
392 - ParentT ::
while w;stmt s;
Select s such that Parent*(w,s)
4,5,6,10,11,12,27,28,29,35,36,37,42,59,60,61,69,70
5000
393 - ParentT ::
stmt s; while w,w1;
Select w such that Parent*(w,w)

5000
394 - ParentT ::
stmt s; while w,w1;
Select BOOLEAN such that Parent*(w,w1)
False
5000
395 - ParentT ::
while w; if if;
Select if such that Parent*(w,if)
59
5000
396 - ParentT ::
while w; call call;
Select call such that Parent*(w,call)
5,11,12,28,36,42,69
5000
397 - ParentT ::
if if;prog_line n;
Select BOOLEAN such that Parent*(if,6)
False
5000
398 - ParentT ::
if if;prog_line n;
Select BOOLEAN such that Parent*(if,_)
True
5000
399 - ParentT ::
if if;prog_line n;
Select BOOLEAN such that Parent*(if,49)
False
5000
400 - ParentT ::
if if;prog_line n;
Select if such that Parent*(if,_)
7,20,38,43,59,64
5000
401 - ParentT ::
if if;assign a;
Select if.stmt# such that Parent*(if,a) with a.stmt#=49

5000
402 - ParentT ::
if if;stmt s;
Select if such that Parent*(if,s)
7,20,38,43,59,64
5000
403 - ParentT ::
if if; while w;
Select w such that Parent*(if,w)
9,41,68
5000
404 - ParentT ::
if if; while w;
Select BOOLEAN such that Parent*(if,w)
True
5000
405 - ParentT ::
stmt s; if if,if1;
Select if such that Parent*(if1,if)
43
5000
406 - ParentT ::
if if; call call;
Select call such that Parent*(if,call)
11,12,13,23,42,47,48,65,69
5000
407 - ParentT ::
call c;prog_line n;
Select BOOLEAN such that Parent*(c,6)
False
5000
408 - ParentT ::
call c;prog_line n;
Select c such that Parent*(c,_) with c.stmt#=52

5000
409 - ParentT ::
call c;prog_line n;
Select c such that Parent*(c,_) with c.procName = "Third"

5000
410 - ParentT ::
call c;prog_line n;
Select BOOLEAN such that Parent*(c,_)
False
5000
411 - ParentT ::
call c;assign a;
Select a such that Parent*(c,a)

5000
412 - ParentT ::
call c;stmt s;
Select s such that Parent*(c,s)

5000
413 - ParentT ::a
call c; while w;
Select w such that Parent*(c,w)

5000
414 - ParentT ::
call c; while w;
Select BOOLEAN such that Parent*(c,w)
False
5000
415 - ParentT ::
call c; if if;
Select if such that Parent*(c,if)

5000
416 - ParentT ::
call call,call1;
Select call such that Parent*(call1,call)

5000
417 - Next ::

Select BOOLEAN such that Next(3,4)
True
5000
418 - Next ::

Select BOOLEAN such that Next(3,7)
True
5000
419 - Next ::

Select BOOLEAN such that Next(3,_)
True
5000
420 - Next ::
assign a;
Select a such that Next(3,a)

5000
421 - Next ::
stmt s;
Select s such that Next(3,s)

5000
422 - Next ::
while w;
Select w such that Next(2,w)

5000
423 - Next ::
if if;
Select w such that Next(3,if)

5000
424 - Next ::
call c;
Select w such that Next(10,c)

5000
425 - Next ::

Select BOOLEAN such that Next(_,4)
True
5000
418 - Next ::

Select BOOLEAN such that Next(_,7)
True
5000
419 - Next ::

Select BOOLEAN such that Next(_,_)
True
5000
420 - Next ::
assign a;
Select a such that Next(_,a) with a.stmt#=15

5000
421 - Next ::
stmt s;
Select s such that Next(_,s)

5000
422 - Next ::
while w;
Select w such that Next(_,w)

5000
423 - Next ::
if if;
Select w such that Next(_,if)

5000
424 - Next ::
call c;
Select w such that Next(_,c)

5000
425 - Next ::
assign a;
Select BOOLEAN such that Next(a,4)
True
5000
426 - Next ::
assign a;
Select BOOLEAN such that Next(a,17)
True
5000
427 - Next ::
assign a;
Select BOOLEAN such that Next(a,_)
True
5000
428 - Next ::
assign a;
Select a such that Next(a,a)

5000
429 - Next ::
assign a;stmt s;
Select s such that Next(a,s) with s.stmt#=15

5000
430 - Next ::
assign a;while w;
Select w such that Next(a,w)

5000
431 - Next ::
assign a;if if;
Select w such that Next(a,if)

5000
432 - Next ::
assign a;call c;
Select w such that Next(a,c)

5000
433 - Next ::
assign a;stmt s;
Select BOOLEAN such that Next(s,4)
True
5000
434 - Next ::
assign a;stmt s;
Select BOOLEAN such that Next(s,17)
True
5000
435 - Next ::
stmt a;
Select BOOLEAN such that Next(a,_)
True
5000
436 - Next ::
stmt a;
Select a such that Next(a,a)

5000
437 - Next ::
assign a;stmt s,s1;
Select s such that Next(s1,s) with s.stmt#=15

5000
438 - Next ::
assign a;while w;stmt s;
Select w such that Next(s,w)

5000
439 - Next ::
stmt s;assign a;if if;
Select w such that Next(s,if)

5000
440 - Next ::
stmt s;assign a;call c;
Select w such that Next(s,c)

5000
441 - Next ::
assign a;while w;
Select BOOLEAN such that Next(w,4)
True
5000
442 - Next ::
assign a;while w;
Select BOOLEAN such that Next(w,7)
True
5000
443 - Next ::
assign a;while w;
Select BOOLEAN such that Next(w,_)
True
5000
444 - Next ::
assign a;while w;
Select a such that Next(w,a)

5000
445 - Next ::
assign a;stmt s;while w;
Select s such that Next(w,s) with s.stmt#=15

5000
446 - Next ::
assign a;while w,w1;
Select w such that Next(w,w1)

5000
447 - Next ::
while w;assign a;if if;
Select w such that Next(w,if)

5000
448 - Next ::
while w;assign a;call c;
Select w such that Next(w,c)

5000
449 - Next ::
assign a;if if;
Select BOOLEAN such that Next(if,4)

5000
450 - Next ::
assign a;if if;
Select BOOLEAN such that Next(if,7)

5000
451 - Next ::
assign a;while w;if if;
Select BOOLEAN such that Next(if,_)

5000
452 - Next ::
if if;assign a;while w;
Select a such that Next(if,a)

5000
453 - Next ::
assign a;stmt s;while w;if if;
Select s such that Next(if,s) with s.stmt#=15

5000
454 - Next ::
assign a;while w,w1;if if;
Select w such that Next(if,w1)

5000
455 - Next ::
while w;assign a;if if,if1;
Select w such that Next(if1,if)

5000
456 - Next ::
while w;assign a;call c;if if;
Select w such that Next(if,c)

5000
457 - Next ::
assign a;call c;
Select BOOLEAN such that Next(c,34)

5000
458 - Next ::
call c;assign a;if if;
Select BOOLEAN such that Next(c,37)

5000
459 - Next ::
call c;assign a;while w;if if;
Select BOOLEAN such that Next(c,_)

5000
460 - Next ::
call c;if if;assign a;while w;
Select a such that Next(c,a)

5000
461 - Next ::
assign a;stmt s;while w;if if;call c;
Select s such that Next(c,s) with s.stmt#=15

5000
462 - Next ::
assign a;while w,w1;if if;
Select w such that Next(if,w1)

5000
463 - Next ::
call c;while w;assign a;if if,if1;
Select w such that Next(c,if)

5000
464 - Next ::
while w;assign a;call c;if if;
Select w such that Next(c,c)

5000
465 - NextT ::

Select BOOLEAN such that Next*(3,4)
True
5000
466 - NextT ::

Select BOOLEAN such that Next*(3,7)
True
5000
467 - NextT ::

Select BOOLEAN such that Next*(3,_)
True
5000
468 - NextT ::
assign a;
Select a such that Next*(3,a)

5000
469 - NextT ::
stmt s;
Select s such that Next*(3,s)

5000
470 - NextT ::
while w;
Select w such that Next*(2,w)

5000
471 - NextT ::
if if;
Select w such that Next*(3,if)

5000
472 - NextT ::
call c;
Select w such that Next*(10,c)

5000
473 - NextT ::

Select BOOLEAN such that Next*(_,4)
True
5000
474 - NextT ::

Select BOOLEAN such that Next*(_,7)
True
5000
475 - NextT ::

Select BOOLEAN such that Next*(_,_)
True
5000
476 - NextT ::
assign a;
Select a such that Next*(_,a) with a.stmt#=15

5000
477 - NextT ::
stmt s;
Select s such that Next*(_,s)

5000
478 - NextT ::
while w;
Select w such that Next*(_,w)

5000
479 - NextT ::
if if;
Select w such that Next*(_,if)

5000
480 - NextT ::
call c;
Select w such that Next*(_,c)

5000
481 - NextT ::
assign a;
Select BOOLEAN such that Next*(a,4)
True
5000
482 - NextT ::
assign a;
Select BOOLEAN such that Next*(a,17)
True
5000
483 - NextT ::
assign a;
Select BOOLEAN such that Next*(a,_)
True
5000
484 - NextT ::
assign a;
Select a such that Next*(a,a)

5000
485 - NextT ::
assign a;stmt s;
Select s such that Next*(a,s) with s.stmt#=15

5000
486 - NextT ::
assign a;while w;
Select w such that Next*(a,w)

5000
487 - NextT ::
assign a;if if;
Select w such that Next*(a,if)

5000
488 - NextT ::
assign a;call c;
Select w such that Next*(a,c)

5000
489 - NextT ::
assign a;stmt s;
Select BOOLEAN such that Next*(s,4)
True
5000
490 - NextT ::
assign a;stmt s;
Select BOOLEAN such that Next*(s,17)
True
5000
491 - NextT ::
stmt a;
Select BOOLEAN such that Next*(a,_)
True
5000
492 - NextT ::
stmt a;
Select a such that Next*(a,a)

5000
493 - NextT ::
assign a;stmt s,s1;
Select s such that Next*(s1,s) with s.stmt#=15

5000
494 - NextT ::
assign a;while w;stmt s;
Select w such that Next*(s,w)

5000
495 - NextT ::
stmt s;assign a;if if;
Select w such that Next*(s,if)

5000
496 - NextT ::
stmt s;assign a;call c;
Select w such that Next*(s,c)

5000
497 - NextT ::
assign a;while w;
Select BOOLEAN such that Next*(w,4)
True
5000
498 - NextT ::
assign a;while w;
Select BOOLEAN such that Next*(w,7)
True
5000
499 - NextT ::
assign a;while w;
Select BOOLEAN such that Next*(w,_)
True
5000
500 - NextT ::
assign a;while w;
Select a such that Next*(w,a)

5000
501 - NextT ::
assign a;stmt s;while w;
Select s such that Next*(w,s) with s.stmt#=15

5000
502 - NextT ::
assign a;while w,w1;
Select w such that Next*(w,w1)

5000
503 - NextT ::
while w;assign a;if if;
Select w such that Next*(w,if)

5000
504 - NextT ::
while w;assign a;call c;
Select w such that Next*(w,c)

5000
505 - NextT ::
assign a;if if;
Select BOOLEAN such that Next*(if,4)

5000
506 - NextT ::
assign a;if if;
Select BOOLEAN such that Next*(if,7)

5000
507 - NextT ::
assign a;while w;if if;
Select BOOLEAN such that Next*(if,_)

5000
508 - NextT ::
if if;assign a;while w;
Select a such that Next*(if,a)

5000
509 - NextT ::
assign a;stmt s;while w;if if;
Select s such that Next*(if,s) with s.stmt#=15

5000
510 - NextT ::
assign a;while w,w1;if if;
Select w such that Next*(if,w1)

5000
511 - NextT ::
while w;assign a;if if,if1;
Select w such that Next*(if1,if)

5000
512 - NextT ::
while w;assign a;call c;if if;
Select w such that Next*(if,c)

5000
513 - NextT ::
assign a;call c;
Select BOOLEAN such that Next*(c,34)

5000
514 - NextT ::
call c;assign a;if if;
Select BOOLEAN such that Next*(c,37)

5000
515 - NextT ::
call c;assign a;while w;if if;
Select BOOLEAN such that Next*(c,_)

5000
516 - NextT ::
call c;if if;assign a;while w;
Select a such that Next*(c,a)

5000
517 - NextT ::
assign a;stmt s;while w;if if;call c;
Select s such that Next*(c,s) with s.stmt#=15

5000
518 - NextT ::
assign a;while w,w1;if if;
Select w such that Next*(if,w1)

5000
519 - NextT ::
call c;while w;assign a;if if,if1;
Select w such that Next*(c,if)

5000
520 - NextT ::
while w;assign a;call c;if if;
Select w such that Next*(c,c)

5000
521 - Affect ::
while w;assign a;call c;if if;
Select w such that Affects(15,16)

5000
522 - Affect ::
while w;assign a;call c;if if;
Select w such that Affects(1,_)

5000
523 - Affect ::
while w;assign a;call c;if if;
Select a such that Affects(1,a)

5000
524 - Affect ::
while w;assign a;call c;if if;
Select w such that Affects(_,16)

5000
525 - Affect ::
while w;assign a;call c;if if;
Select w such that Affects(_,_)

5000
526 - Affect ::
while w;assign a;call c;if if;
Select a such that Affects(_,a) with a.stmt#=17

5000
527 - Affect ::
while w;assign a;call c;if if;
Select a such that Affects(a,16)

5000
528 - Affect ::
while w;assign a;call c;if if;
Select w such that Affects(a,_)

5000
529 - Affect ::
while w;assign a,a1;call c;if if;
Select a such that Affects(a1,a)

5000
530 - AffectsT ::
while w;assign a;call c;if if;
Select w such that Affects*(15,16)

5000
531 - AffectsT ::
while w;assign a;call c;if if;
Select w such that Affects*(1,_)

5000
532 - AffectsT ::
while w;assign a;call c;if if;
Select a such that Affects*(1,a)

5000
533 - AffectsT ::
while w;assign a;call c;if if;
Select w such that Affects*(_,16)

5000
534 - AffectsT ::
while w;assign a;call c;if if;
Select w such that Affects*(_,_)

5000
535 - AffectsT ::
while w;assign a;call c;if if;
Select a such that Affects*(_,a) with a.stmt#=17

5000
536 - AffectsT ::
while w;assign a;call c;if if;
Select a such that Affects*(a,16)

5000
537 - AffectsT ::
while w;assign a;call c;if if;
Select w such that Affects*(a,_)

5000
538 - AffectsT ::
while w;assign a,a1;call c;if if;
Select a such that Affects*(a1,a)

5000
539 - NextBip ::

Select BOOLEAN such that NextBip(3,20)

5000
540 - NextBip ::

Select BOOLEAN such that NextBip(12,47)

5000
541 - NextBip ::

Select BOOLEAN such that NextBip(3,_)
True
5000
542 - NextBip ::
assign a;
Select a such that NextBip(3,a)

5000
543 - NextBip ::
stmt s;
Select s such that NextBip(3,s)

5000
544 - NextBip ::
while w;
Select w such that NextBip(2,w)

5000
545 - NextBip ::
if if;
Select w such that NextBip(3,if)

5000
546 - NextBip ::
call c;
Select w such that NextBip(10,c)

5000
547 - NextBip ::

Select BOOLEAN such that NextBip(_,14)
True
5000
548 - NextBip ::

Select BOOLEAN such that NextBip(_,37)
True
5000
549 - NextBip ::

Select BOOLEAN such that NextBip(_,_)
True
5000
550 - NextBip ::
assign a;
Select a such that NextBip(_,a) with a.stmt#=15

5000
551 - NextBip ::
stmt s;
Select s such that NextBip(_,s)

5000
552 - NextBip ::
while w;
Select w such that NextBip(_,w)

5000
553 - NextBip ::
if if;
Select w such that NextBip(_,if)

5000
554 - NextBip ::
call c;
Select w such that NextBip(_,c)

5000
555 - NextBip ::
assign a;
Select BOOLEAN such that NextBip(a,4)
True
5000
556 - NextBip ::
assign a;
Select BOOLEAN such that NextBip(a,17)
True
5000
557 - NextBip ::
assign a;
Select BOOLEAN such that NextBip(a,_)
True
5000
558 - NextBip ::
assign a;
Select a such that NextBip(a,a)

5000
559 - NextBip ::
assign a;stmt s;
Select s such that NextBip(a,s) with s.stmt#=30

5000
550 - NextBip ::
assign a;while w;
Select w such that NextBip(a,w)

5000
551 - NextBip ::
assign a;if if;
Select w such that NextBip(a,if)

5000
552 - NextBip ::
assign a;call c;
Select w such that NextBip(a,c)

5000
553 - NextBip ::
assign a;stmt s;
Select BOOLEAN such that NextBip(s,54)

5000
554 - NextBip ::
assign a;stmt s;
Select BOOLEAN such that NextBip(s,27)
True
5000
555 - NextBip ::
stmt a;
Select BOOLEAN such that NextBip(a,_)
True
5000
556 - NextBip ::
stmt a;
Select a such that NextBip(a,a)

5000
557 - NextBip ::
assign a;stmt s,s1;
Select s such that NextBip(s1,s) with s.stmt#=45

5000
558 - NextBip ::
assign a;while w;stmt s;
Select w such that NextBip(s,w)

5000
559 - NextBip ::
stmt s;assign a;if if;
Select w such that NextBip(s,if)

5000
560 - NextBip ::
stmt s;assign a;call c;
Select w such that NextBip(s,c)

5000
561 - NextBip ::
assign a;while w;
Select BOOLEAN such that NextBip(w,54)
True
5000
562 - NextBip ::
assign a;while w;
Select BOOLEAN such that NextBip(w,77)
True
5000
563 - NextBip ::
assign a;while w;
Select BOOLEAN such that NextBip(w,_)
True
5000
564 - NextBip ::
assign a;while w;
Select a such that NextBip(w,a)

5000
565 - NextBip ::
assign a;stmt s;while w;
Select s such that NextBip(w,s) with s.stmt#=35

5000
566 - NextBip ::
assign a;while w,w1;
Select w such that NextBip(w,w1)

5000
567 - NextBip ::
while w;assign a;if if;
Select w such that NextBip(w,if)

5000
568 - NextBip ::
while w;assign a;call c;
Select w such that NextBip(w,c)

5000
569 - NextBip ::
assign a;if if;
Select BOOLEAN such that NextBip(if,34)

5000
570 - NextBip ::
assign a;if if;
Select BOOLEAN such that NextBip(if,37)

5000
571 - NextBip ::
assign a;while w;if if;
Select BOOLEAN such that NextBip(if,_)

5000
572 - NextBip ::
if if;assign a;while w;
Select a such that NextBip(if,a)

5000
573 - NextBip ::
assign a;stmt s;while w;if if;
Select s such that NextBip(if,s) with s.stmt#=45

5000
574 - NextBip ::
assign a;while w,w1;if if;
Select w such that NextBip(if,w1)

5000
575 - NextBip ::
while w;assign a;if if,if1;
Select w such that NextBip(if1,if)

5000
576 - NextBip ::
while w;assign a;call c;if if;
Select w such that NextBip(if,c)

5000
577 - NextBip ::
assign a;call c;
Select BOOLEAN such that NextBip(c,34)

5000
578 - NextBip ::
call c;assign a;if if;
Select BOOLEAN such that NextBip(c,37)

5000
579 - NextBip ::
call c;assign a;while w;if if;
Select BOOLEAN such that NextBip(c,_)

5000
580 - NextBip ::
call c;if if;assign a;while w;
Select a such that NextBip(c,a)

5000
581 - NextBip ::
assign a;stmt s;while w;if if;call c;
Select s such that NextBip(c,s) with s.stmt#=15

5000
582 - NextBip ::
assign a;while w,w1;if if;
Select w such that NextBip(if,w1)

5000
583 - NextBip ::
call c;while w;assign a;if if,if1;
Select w such that NextBip(c,if)

5000
584 - NextBip ::
while w;assign a;call c;if if;
Select w such that NextBip(c,c)

5000
585 - NextBipT ::

Select BOOLEAN such that NextBip*(3,20)

5000
586 - NextBipT ::

Select BOOLEAN such that NextBip*(12,47)

5000
587 - NextBipT ::

Select BOOLEAN such that NextBip*(3,_)
True
5000
588 - NextBipT ::
assign a;
Select a such that NextBip*(3,a)

5000
589 - NextBipT ::
stmt s;
Select s such that NextBip*(3,s)

5000
590 - NextBipT ::
while w;
Select w such that NextBip*(2,w)

5000
591 - NextBipT ::
if if;
Select w such that NextBip*(3,if)

5000
592 - NextBipT ::
call c;
Select w such that NextBip*(10,c)

5000
593 - NextBipT ::

Select BOOLEAN such that NextBip*(_,14)
True
5000
594 - NextBipT ::

Select BOOLEAN such that NextBip*(_,37)
True
5000
595 - NextBipT ::

Select BOOLEAN such that NextBip*(_,_)
True
5000
596 - NextBipT ::
assign a;
Select a such that NextBip*(_,a) with a.stmt#=15

5000
597 - NextBipT ::
stmt s;
Select s such that NextBip*(_,s)

5000
598 - NextBipT ::
while w;
Select w such that NextBip*(_,w)

5000
599 - NextBipT ::
if if;
Select w such that NextBip*(_,if)

5000
600 - NextBipT ::
call c;
Select w such that NextBip*(_,c)

5000
601 - NextBipT ::
assign a;
Select BOOLEAN such that NextBip*(a,4)
True
5000
602 - NextBipT ::
assign a;
Select BOOLEAN such that NextBip*(a,17)
True
5000
603 - NextBipT ::
assign a;
Select BOOLEAN such that NextBip*(a,_)
True
5000
604 - NextBipT ::
assign a;
Select a such that NextBip*(a,a)

5000
605 - NextBipT ::
assign a;stmt s;
Select s such that NextBip*(a,s) with s.stmt#=30

5000
606 - NextBipT ::
assign a;while w;
Select w such that NextBip*(a,w)

5000
607 - NextBipT ::
assign a;if if;
Select w such that NextBip*(a,if)

5000
608 - NextBipT ::
assign a;call c;
Select w such that NextBip*(a,c)

5000
609 - NextBipT ::
assign a;stmt s;
Select BOOLEAN such that NextBip*(s,54)

5000
610 - NextBipT ::
assign a;stmt s;
Select BOOLEAN such that NextBip*(s,27)
True
5000
611 - NextBipT ::
stmt a;
Select BOOLEAN such that NextBip*(a,_)
True
5000
612 - NextBipT ::
stmt a;
Select a such that NextBip*(a,a)

5000
613 - NextBipT ::
assign a;stmt s,s1;
Select s such that NextBip*(s1,s) with s.stmt#=45

5000
614 - NextBipT ::
assign a;while w;stmt s;
Select w such that NextBip*(s,w)

5000
615 - NextBipT ::
stmt s;assign a;if if;
Select w such that NextBip*(s,if)

5000
616 - NextBipT ::
stmt s;assign a;call c;
Select w such that NextBip*(s,c)

5000
617 - NextBipT ::
assign a;while w;
Select BOOLEAN such that NextBip*(w,54)
True
5000
618 - NextBipT ::
assign a;while w;
Select BOOLEAN such that NextBip*(w,77)
True
5000
619 - NextBipT ::
assign a;while w;
Select BOOLEAN such that NextBip*(w,_)
True
5000
620 - NextBipT ::
assign a;while w;
Select a such that NextBip*(w,a)

5000
623 - NextBipT ::
assign a;stmt s;while w;
Select s such that NextBip*(w,s) with s.stmt#=35

5000
624 - NextBipT ::
assign a;while w,w1;
Select w such that NextBip*(w,w1)

5000
625 - NextBipT ::
while w;assign a;if if;
Select w such that NextBip*(w,if)

5000
626 - NextBipT ::
while w;assign a;call c;
Select w such that NextBip*(w,c)

5000
627 - NextBipT ::
assign a;if if;
Select BOOLEAN such that NextBip*(if,34)

5000
628 - NextBipT ::
assign a;if if;
Select BOOLEAN such that NextBip*(if,37)

5000
629 - NextBipT ::
assign a;while w;if if;
Select BOOLEAN such that NextBip*(if,_)

5000
630 - NextBipT ::
if if;assign a;while w;
Select a such that NextBip*(if,a)

5000
631 - NextBipT ::
assign a;stmt s;while w;if if;
Select s such that NextBip*(if,s) with s.stmt#=45

5000
632 - NextBipT ::
assign a;while w,w1;if if;
Select w such that NextBip*(if,w1)

5000
633 - NextBipT ::
while w;assign a;if if,if1;
Select w such that NextBip*(if1,if)

5000
634 - NextBipT ::
while w;assign a;call c;if if;
Select w such that NextBip*(if,c)

5000
635 - NextBipT ::
assign a;call c;
Select BOOLEAN such that NextBip*(c,34)

5000
636 - NextBipT ::
call c;assign a;if if;
Select BOOLEAN such that NextBip*(c,37)

5000
637 - NextBipT ::
call c;assign a;while w;if if;
Select BOOLEAN such that NextBip*(c,_)

5000
638 - NextBipT ::
call c;if if;assign a;while w;
Select a such that NextBip*(c,a)

5000
639 - NextBipT ::
assign a;stmt s;while w;if if;call c;
Select s such that NextBip*(c,s) with s.stmt#=15

5000
640 - NextBipT ::
assign a;while w,w1;if if;
Select w such that NextBip*(if,w1)

5000
641 - NextBipT ::
call c;while w;assign a;if if,if1;
Select w such that NextBip*(c,if)

5000
642 - NextBipT ::
while w;assign a;call c;if if;
Select w such that NextBip*(c,c)

5000
643 - AffectsBip ::
while w;assign a;call c;if if;
Select w such that AffectsBip(15,16)

5000
644 - AffectsBip ::
while w;assign a;call c;if if;
Select w such that AffectsBip(1,_)

5000
645 - AffectsBip ::
while w;assign a;call c;if if;
Select a such that AffectsBip(1,a)

5000
646 - AffectsBip ::
while w;assign a;call c;if if;
Select w such that AffectsBip(_,16)

5000
647 - AffectsBip ::
while w;assign a;call c;if if;
Select w such that AffectsBip(_,_)

5000
648 - AffectsBip ::
while w;assign a;call c;if if;
Select a such that AffectsBip(_,a) with a.stmt#=17

5000
649 - AffectsBip ::
while w;assign a;call c;if if;
Select a such that AffectsBip(a,16)

5000
650 - AffectsBip ::
while w;assign a;call c;if if;
Select w such that AffectsBip(a,_)

5000
651 - AffectsBip ::
while w;assign a,a1;call c;if if;
Select a such that AffectsBip(a1,a)

5000
652 - AffectsBip ::
while w;assign a,a1;call c;if if;
Select a such that AffectsBip(a1,100000)

5000
653 - AffectsBipT ::
while w;assign a;call c;if if;
Select w such that AffectsBip*(15,16)

5000
654 - AffectsBipT ::
while w;assign a;call c;if if;
Select w such that AffectsBip*(1,_)

5000
655 - AffectsBipT ::
while w;assign a;call c;if if;
Select a such that AffectsBip*(1,a)

5000
656 - AffectsBipT ::
while w;assign a;call c;if if;
Select w such that AffectsBip*(_,16)

5000
657 - AffectsBipT ::
while w;assign a;call c;if if;
Select w such that AffectsBip*(_,_)

5000
658 - AffectsBipT ::
while w;assign a;call c;if if;
Select a such that AffectsBip*(_,a) with a.stmt#=17

5000
659 - AffectsBipT ::
while w;assign a;call c;if if;
Select a such that AffectsBip*(a,16)

5000
660 - AffectsBipT ::
while w;assign a;call c;if if;
Select w such that AffectsBip*(a,_)

5000
661 - AffectsBipT ::
while w;assign a,a1;call c;if if;
Select a such that AffectsBip*(a1,a)

5000
662 - pattern ::
while w;assign a,a1;call c;if if;
Select if pattern if("m",_,_)

5000
663 - pattern ::
while w;assign a,a1;call c;if if;
Select if pattern if(_,_,_)

5000
664 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select if pattern if(v,_,_)

5000
665 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select if pattern if(v,_,_) with v.varName = "m"

5000
666 - pattern ::
while w;assign a,a1;call c;if if;
Select w pattern w("i",_)

5000
667 - pattern ::
while w;assign a,a1;call c;if if;
Select w pattern w(_,_)

5000
668 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select w pattern w(v,_)

5000
669 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select w pattern w(v,_) with v.varName = "m"

5000
670 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select w pattern w(v,_) with v.varName = "m"

5000
671 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select a pattern a(_,"t*3+4*6")

5000
672 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select a pattern a("r","t*3+4*6")

5000
673 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select v pattern a(v,"t*3+4*6")

5000
674 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select a pattern a(_,_)

5000
675 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select a pattern a("r",_)

5000
676 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select v pattern a(v,_)

5000
677 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select a pattern a(_,"z")

5000
678 - pattern ::
variable v;while w;assign a,a1;call c;if if;
Select a pattern a("r","z")

5000
679 - pattern ::
variable v;while w;assign                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       